Index: app/src/main/java/com/osoftec/helponcall/universitydemo/Fragment_College_home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/osoftec/helponcall/universitydemo/Fragment_College_home.java	(revision )
+++ app/src/main/java/com/osoftec/helponcall/universitydemo/Fragment_College_home.java	(revision )
@@ -80,7 +80,7 @@
 
 public class Fragment_College_home extends Fragment implements OnMapReadyCallback, View.OnClickListener {
     public final int LOCATION_REQUEST = 100;
-    final private Handler frcall_handler = new Handler();
+
     boolean isNeedyGuardCanHitGoogleAPI = false, needyGuardLocationChanged = false, APIhitTimer = false;
     //-------------------------------------------------
     String isAcDEleted, myName;
@@ -93,11 +93,12 @@
     private LinearLayout LL_nodata;
     private RecyclerView rv_sosbyMe, rv_sosbyFriend;
     private ImageView imageView, IV_canceljob, IV_IamHere, iv_guardCall;
-    private String AspNetUserId, InteractionID;
+    private static String AspNetUserId, InteractionID;
     private TextView TV_sosRequest;
     private CommonFunctions cmf;
-    private Timer frcall_timer;
-    private TimerTask frcall_timerTask;
+    private static Timer frcall_timer;
+    private static TimerTask frcall_timerTask;
+    final static private Handler frcall_handler = new Handler();
     // private RippleBackground rippleBackground;
     private ArrayList<EmergencyContactMeModel> me_emergencyarraylist = new ArrayList<>();
     private ArrayList<EmergencyContactFriendModel> friend_emergencyarraylist = new ArrayList<>();
@@ -107,10 +108,10 @@
     private SOS_By_Friend_Adapter sos_by_friend_adapter;
     private SOSbyFriendModel soSbyFriendModel;
     private ArrayList<SOSbyFriendModel> arraylistfriend = new ArrayList<>();
-    private String response = "";
-    private Double newlattitude, newlongitude, guardlatitude, guardlongitude;
-    private String newlat, newlong, guardlat, guardlong, newlat2, newlong2, guardlat2, guardlong2;
-    private LatLng needy_location, userselectedlocation;
+    private static String response = "";
+    private static Double newlattitude, newlongitude, guardlatitude, guardlongitude;
+    private static String newlat, newlong, guardlat, guardlong, newlat2, newlong2, guardlat2, guardlong2;
+    private static LatLng needy_location, userselectedlocation;
     private Marker needymarker, userSelectedMarker;
     private BitmapDescriptor icon;
     //private ArrayList<LatLng> points; //added
@@ -145,6 +146,7 @@
 
         myName = cmf.myPreference.getString(getActivity(), cmf.gc.USER_NAME);
 
+
         LL_tab = (LinearLayout) rootView.findViewById(R.id.LL_tab);
         LL_emergencycontact = (LinearLayout) rootView.findViewById(R.id.LL_emergencycontact);
         LL_nodata = (LinearLayout) rootView.findViewById(R.id.LL_nodata);
@@ -172,7 +174,7 @@
 
       /*AppBarLayout appBarLayout = (AppBarLayout) rootView.findViewById(R.id.appbar);
         CoordinatorLayout.LayoutParams params =
-                (CoordinatorLayout.LayoutParams) appBarLayout.getLayoutParams();
+                 (CoordinatorLayout.LayoutParams) appBarLayout.getLayoutParams();
         AppBarLayout.Behavior behavior = new AppBarLayout.Behavior();
         behavior.setDragCallback(new AppBarLayout.Behavior.DragCallback() {
             @Override
@@ -194,6 +196,12 @@
         rv_sosbyFriend = (RecyclerView) rootView.findViewById(R.id.RV_emergencycontact);
         LL_existingcontact.setOnClickListener(this);
         LL_emergencycontact.setOnClickListener(this);
+
+        //-------------
+        getActivity().startService(new Intent(getActivity(), CollegeJobService.class));
+        //------------
+
+
        /* CollapsingToolbarLayout collapsingToolbar =
                 (CollapsingToolbarLayout) rootView.findViewById(R.id.collapsing_toolbar);
         collapsingToolbar.setTitle("");*/
@@ -243,7 +251,6 @@
         InteractionID = cmf.myPreference.getString(getActivity(), GlobalConstants.INTTERACTION_ID);
         //------------------------------
 
-
         AspNetUserId = cmf.myPreference.getString(getActivity(), GlobalConstants.ASPNETUSERID);
         Log.d("-----fragment college intteraction_id: ", InteractionID);
 
@@ -266,8 +273,8 @@
         //version control off
         //UserVersionAPICall();
         //--------------
-        getActivity().startService(new Intent(getActivity(), CollegeJobService.class));
 
+
         visibilityRunningJob(0);
         DataSetFirstTime();
 
@@ -369,7 +376,6 @@
 
     //------------------------------------------------------------------>*************TIMER UPDATE**
     public void forJobpompleteUpdate() {
-        frcall_timer = new Timer();
         try {
             frcall_timer = new Timer();
 
@@ -917,33 +923,21 @@
                 JSONObject jsonObject1 = jsonArray2.optJSONObject(i);
                 soSbyFriendModel = new SOSbyFriendModel();
                 // emergencyContactMeModel = new EmergencyContactMeModel();
-                String AspnetUserID = jsonObject1.optString("AspnetUserID");
-                String UserName = jsonObject1.optString("UserName");
-                String MobileNumber = jsonObject1.optString("MobileNumber");
-                String Latitude = jsonObject1.optString("Latitude");
-                String Longitude = jsonObject1.optString("Longitude");
-                String Address = jsonObject1.optString("Address");
-                String Battery = jsonObject1.optString("Battery");
-                String SOSStatus = jsonObject1.optString("SOSStatus");
-                String OnlineStatus = jsonObject1.optString("OnlineStatus");
-                String LastSeen = jsonObject1.optString("LastSeen");
-                String IsAlertAccept = jsonObject1.optString("IsAlertAccept");
-                String IsAlertCancel = jsonObject1.optString("IsAlertCancel");
-                String UserInteractionID = jsonObject1.optString("InteractionID");
-                if (SOSStatus.equals("1")) {
-                    soSbyFriendModel.setAspnetUserID(AspnetUserID);
-                    soSbyFriendModel.setUserName(UserName);
-                    soSbyFriendModel.setMobileNumber(MobileNumber);
-                    soSbyFriendModel.setLatitude(Latitude);
-                    soSbyFriendModel.setLongitude(Longitude);
-                    soSbyFriendModel.setAddress(Address);
-                    soSbyFriendModel.setBattery(Battery);
-                    soSbyFriendModel.setSOSStatus(SOSStatus);
-                    soSbyFriendModel.setOnlineStatus(OnlineStatus);
-                    soSbyFriendModel.setLastSeen(LastSeen);
-                    soSbyFriendModel.setIsAlertAccept(IsAlertAccept);
-                    soSbyFriendModel.setIsAlertCancel(IsAlertCancel);
-                    soSbyFriendModel.setUserInteractionID(UserInteractionID);
+
+                if (jsonObject1.optString("SOSStatus").equals("1")) {
+                    soSbyFriendModel.setAspnetUserID(jsonObject1.optString("AspnetUserID"));
+                    soSbyFriendModel.setUserName(jsonObject1.optString("UserName"));
+                    soSbyFriendModel.setMobileNumber(jsonObject1.optString("MobileNumber"));
+                    soSbyFriendModel.setLatitude(jsonObject1.optString("Latitude"));
+                    soSbyFriendModel.setLongitude(jsonObject1.optString("Longitude"));
+                    soSbyFriendModel.setAddress(jsonObject1.optString("Address"));
+                    soSbyFriendModel.setBattery(jsonObject1.optString("Battery"));
+                    soSbyFriendModel.setSOSStatus(jsonObject1.optString("SOSStatus"));
+                    soSbyFriendModel.setOnlineStatus(jsonObject1.optString("OnlineStatus"));
+                    soSbyFriendModel.setLastSeen(jsonObject1.optString("LastSeen"));
+                    soSbyFriendModel.setIsAlertAccept(jsonObject1.optString("IsAlertAccept"));
+                    soSbyFriendModel.setIsAlertCancel(jsonObject1.optString("IsAlertCancel"));
+                    soSbyFriendModel.setUserInteractionID(jsonObject1.optString("InteractionID"));
                     arraylistfriend.add(soSbyFriendModel);
                 } /*else {
                     emergencyContactMeModel.setAspnetUserID(AspnetUserID);
@@ -1007,35 +1001,22 @@
                 JSONObject jsonObject1 = jsonArray.optJSONObject(i);
                 soSbyMeModel = new SOSbyMeModel();
                 //  emergencyContactMeModel = new EmergencyContactMeModel();
-                String AspnetUserID = jsonObject1.optString("AspnetUserID");
-                String UserName = jsonObject1.optString("UserName");
-                String MobileNumber = jsonObject1.optString("MobileNumber");
-                String Latitude = jsonObject1.optString("Latitude");
-                String Longitude = jsonObject1.optString("Longitude");
-                String Address = jsonObject1.optString("Address");
-                String Battery = jsonObject1.optString("Battery");
-                String SOSStatus = jsonObject1.optString("SOSStatus");
-                String OnlineStatus = jsonObject1.optString("OnlineStatus");
 
-                String LastSeen = jsonObject1.optString("LastSeen");
-                String IsAlertAccept = jsonObject1.optString("IsAlertAccept");
-                String IsAlertCancel = jsonObject1.optString("IsAlertCancel");
-                String UserInteractionID = jsonObject1.optString("InteractionID");
 
                 // new change both would be show who is job accepted and not accepted but track only accepted user..
-                soSbyMeModel.setAspnetUserID(AspnetUserID);
-                soSbyMeModel.setUserName(UserName);
-                soSbyMeModel.setMobileNumber(MobileNumber);
-                soSbyMeModel.setLatitude(Latitude);
-                soSbyMeModel.setLongitude(Longitude);
-                soSbyMeModel.setAddress(Address);
-                soSbyMeModel.setBattery(Battery);
-                soSbyMeModel.setSOSStatus(SOSStatus);
-                soSbyMeModel.setOnlineStatus(OnlineStatus);
-                soSbyMeModel.setLastseen(LastSeen);
-                soSbyMeModel.setIsAlertAccept(IsAlertAccept);
-                soSbyMeModel.setIsAlertCancel(IsAlertCancel);
-                soSbyMeModel.setUserInteractionID(UserInteractionID);
+                soSbyMeModel.setAspnetUserID(jsonObject1.optString("AspnetUserID"));
+                soSbyMeModel.setUserName(jsonObject1.optString("UserName"));
+                soSbyMeModel.setMobileNumber(jsonObject1.optString("MobileNumber"));
+                soSbyMeModel.setLatitude(jsonObject1.optString("Latitude"));
+                soSbyMeModel.setLongitude(jsonObject1.optString("Longitude"));
+                soSbyMeModel.setAddress(jsonObject1.optString("Address"));
+                soSbyMeModel.setBattery(jsonObject1.optString("Battery"));
+                soSbyMeModel.setSOSStatus(jsonObject1.optString("SOSStatus"));
+                soSbyMeModel.setOnlineStatus(jsonObject1.optString("OnlineStatus"));
+                soSbyMeModel.setLastseen(jsonObject1.optString("LastSeen"));
+                soSbyMeModel.setIsAlertAccept(jsonObject1.optString("IsAlertAccept"));
+                soSbyMeModel.setIsAlertCancel(jsonObject1.optString("IsAlertCancel"));
+                soSbyMeModel.setUserInteractionID(jsonObject1.optString("InteractionID"));
                 arraylistme.add(soSbyMeModel);
 
                /* if (IsAlertAccept.equals("1")) {
@@ -1211,6 +1192,7 @@
         super.onResume();
         getFromGpsTracker();
         zoom.startAnimation(zoomAnimation);
+        MapUpdate(1, needy_location);
         forJobpompleteUpdate();
         // rippleBackground.startRippleAnimation();
     }
@@ -1236,7 +1218,7 @@
     }
 
     private void MapUpdate(int zoom, LatLng needy_location) {
-        String username = cmf.myPreference.getString(getActivity(), GlobalConstants.USER_NAME);
+        String  username = cmf.myPreference.getString(getActivity(), GlobalConstants.USER_NAME);
         if (GM_info != null) {
             Drawable circle = getResources().getDrawable(R.drawable.needy_marker);
 
@@ -1317,6 +1299,8 @@
         try {
             if (ZoomFor.equals("needy")) {
                 GM_info.animateCamera(CameraUpdateFactory.newLatLngZoom(needy_location, ZoomLevel));
+                if (needymarker == null)
+                    MapUpdate(1, needy_location);
             } else {
                 GM_info.animateCamera(CameraUpdateFactory.newLatLngZoom(userselectedlocation, ZoomLevel));
             }
